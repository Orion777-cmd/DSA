class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        rows, columns = len(matrix), len(matrix[0])
        self.matrices= [[0] * (columns+1) for _ in range(rows+1)]
        
        for i in range(rows):
            prefix = 0
            for j in range(columns):
                prefix += matrix[i][j]
                top = self.matrices[i][j+1]
                self.matrices[i+1][j+1] = prefix + top
                
            

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        row1,col1,row2,col2 = row1 + 1, col1+1, row2+1, col2 +1
        
        box = self.matrices[row2][col2]
        top = self.matrices[row1-1][col2]
        left = self.matrices[row2][col1-1]
        topleft= self.matrices[row1-1][col1-1]
        
        return box - top - left +topleft


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
